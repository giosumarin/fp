ESERCIZI0
=========

Definire la funzione iterativa

    isuml :  int list -> int

che calcola la somma degli elementi di una lista di interi.

Usare la funzione ausiliaria  

     sumlA : int list * int   -> int

in cui nel secondo parametro viene accumulata la somma degli elementi.

Confrontare sperimentalmentele   isuml e  

let rec suml = function
    | [] -> 0
    | x :: xs -> x + suml xs;;

Nell'interprete dare il comando 

 #time

che, dopo ogni computazione, stampa alcuni dati sulle risorse utilizzate 
(tempo CPU, uso garbage collector, ecc.)

Provare ad eseguire delle chiamate della forma

  suml [ 1 ..K ]      
 isuml [ 1 .. K ]

con K intero grande a piacere.
Tenere presente che le liste sono costruite nello heap.

